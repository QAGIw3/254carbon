# ClickHouse server configuration (merged into /etc/clickhouse-server/config.d/config.xml)
# - Enables console logging for kubectl logs
# - Opens HTTP/native/MySQL/PostgreSQL compatibility ports
# - Increases connections/concurrency for prod profile
# - Allows local filesystem backups under /var/lib/clickhouse/backups
apiVersion: v1
kind: ConfigMap
metadata:
  name: clickhouse-config
  namespace: market-intelligence
data:
  config.xml: |
    <clickhouse>
        <logger>
            <level>information</level>
            <!-- Also log to stdout for kubectl logs visibility -->
            <console>true</console>
            <log>/var/log/clickhouse-server/clickhouse-server.log</log>
            <errorlog>/var/log/clickhouse-server/clickhouse-server.err.log</errorlog>
            <size>1000M</size>
            <count>10</count>
        </logger>
        <http_port>8123</http_port>
        <tcp_port>9000</tcp_port>
        <mysql_port>9004</mysql_port>
        <postgresql_port>9005</postgresql_port>
        <interserver_http_port>9009</interserver_http_port>
        <listen_host>0.0.0.0</listen_host>
        <max_connections>4096</max_connections>
        <keep_alive_timeout>3</keep_alive_timeout>
        <max_concurrent_queries>64</max_concurrent_queries>
        <!-- Let ClickHouse auto-size caches from cgroups in production -->
        <path>/var/lib/clickhouse/</path>
        <tmp_path>/var/lib/clickhouse/tmp/</tmp_path>
        <user_files_path>/var/lib/clickhouse/user_files/</user_files_path>
        <access_control_path>/var/lib/clickhouse/access/</access_control_path>
        <format_schema_path>/var/lib/clickhouse/format_schemas/</format_schema_path>
        <dictionaries_lib_path>/var/lib/clickhouse/dictionaries_lib/</dictionaries_lib_path>
        <backups>
            <allowed_path>/var/lib/clickhouse/backups/</allowed_path>
        </backups>
        <!-- Rely on default user directories (users.xml) from the image -->
        
        <!-- Storage configuration for data tiering (hot/warm/cold) -->
        <storage_configuration>
            <disks>
                <default>
                    <type>local</type>
                    <path>/var/lib/clickhouse/</path>
                </default>
                <s3_warm>
                    <type>s3</type>
                    <endpoint>http://minio:9000/clickhouse-warm</endpoint>
                    <access_key_id>minioadmin</access_key_id>
                    <secret_access_key>minioadmin</secret_access_key>
                    <region>us-east-1</region>
                </s3_warm>
                <s3_cold>
                    <type>s3</type>
                    <endpoint>http://minio:9000/clickhouse-cold</endpoint>
                    <access_key_id>minioadmin</access_key_id>
                    <secret_access_key>minioadmin</secret_access_key>
                    <region>us-east-1</region>
                </s3_cold>
            </disks>
            <policies>
                <hot_warm_cold>
                    <volumes>
                        <hot>
                            <disk>default</disk>
                        </hot>
                        <warm>
                            <disk>s3_warm</disk>
                        </warm>
                        <cold>
                            <disk>s3_cold</disk>
                        </cold>
                    </volumes>
                </hot_warm_cold>
            </policies>
        </storage_configuration>

        <!-- Cluster topology and background pool tuning -->
        <remote_servers>
            <market_cluster>
                <shard>
                    <replica>
                        <host>clickhouse-0.clickhouse.market-intelligence.svc.cluster.local</host>
                        <port>9000</port>
                    </replica>
                    <replica>
                        <host>clickhouse-1.clickhouse.market-intelligence.svc.cluster.local</host>
                        <port>9000</port>
                    </replica>
                </shard>
            </market_cluster>
        </remote_servers>

        <!-- Increase background pool sizes during heavy MV population; tune per env -->
        <background_pool_size>32</background_pool_size>
        <background_merges_mutations_concurrency_ratio>2</background_merges_mutations_concurrency_ratio>
    </clickhouse>
