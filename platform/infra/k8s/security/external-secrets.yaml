---
# US Census API Key
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: census-api-credentials
  namespace: market-intelligence
spec:
  refreshInterval: 6h
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  target:
    name: census-api-credentials
    creationPolicy: Owner
  data:
  - secretKey: api-key
    remoteRef:
      key: prod/market-intelligence/census
      property: api_key

# ENTSO-E API Token
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: entsoe-api-credentials
  namespace: market-intelligence
spec:
  refreshInterval: 6h
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  target:
    name: entsoe-api-credentials
    creationPolicy: Owner
  data:
  - secretKey: security-token
    remoteRef:
      key: prod/market-intelligence/entsoe
      property: security_token

# EIA API Credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: eia-api-credentials
  namespace: market-intelligence
spec:
  refreshInterval: 6h
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  target:
    name: eia-api-credentials
    creationPolicy: Owner
  data:
  - secretKey: api-key
    remoteRef:
      key: prod/market-intelligence/eia
      property: api_key

# AESO API Credentials (Bearer token)
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: aeso-api-credentials
  namespace: market-intelligence
spec:
  refreshInterval: 6h
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  target:
    name: aeso-api-credentials
    creationPolicy: Owner
  data:
  - secretKey: bearer-token
    remoteRef:
      key: prod/market-intelligence/aeso
      property: bearer_token

# NOAA CDO API Token
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: noaa-cdo-token
  namespace: market-intelligence
spec:
  refreshInterval: 6h
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  target:
    name: noaa-cdo-token
    creationPolicy: Owner
  data:
  - secretKey: token
    remoteRef:
      key: prod/market-intelligence/noaa-cdo
      property: token

# External Secrets Operator Configuration for Automated Secrets Rotation
# Integrates with AWS Secrets Manager, HashiCorp Vault, or Azure Key Vault

# SecretStore - Configure your secrets backend
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: aws-secrets-manager
  namespace: market-intelligence
spec:
  provider:
    aws:
      service: SecretsManager
      region: us-east-1
      auth:
        jwt:
          serviceAccountRef:
            name: external-secrets-sa

---
# Alternative: HashiCorp Vault SecretStore
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-backend
  namespace: market-intelligence
spec:
  provider:
    vault:
      server: "https://vault.254carbon.ai"
      path: "secret"
      version: "v2"
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "market-intelligence"
          serviceAccountRef:
            name: external-secrets-sa

---
# PostgreSQL Database Credentials (Auto-rotated)
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: postgres-credentials
  namespace: market-intelligence
spec:
  refreshInterval: 1h  # Check for rotation every hour
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  target:
    name: postgres-credentials
    creationPolicy: Owner
  data:
  - secretKey: username
    remoteRef:
      key: prod/market-intelligence/postgres
      property: username
  - secretKey: password
    remoteRef:
      key: prod/market-intelligence/postgres
      property: password
  - secretKey: connection-string
    remoteRef:
      key: prod/market-intelligence/postgres
      property: connection_string

---
# ClickHouse Database Credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: clickhouse-credentials
  namespace: market-intelligence
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  target:
    name: clickhouse-credentials
    creationPolicy: Owner
  data:
  - secretKey: username
    remoteRef:
      key: prod/market-intelligence/clickhouse
      property: username
  - secretKey: password
    remoteRef:
      key: prod/market-intelligence/clickhouse
      property: password

---
# Keycloak Admin Credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: keycloak-admin
  namespace: market-intelligence
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  target:
    name: keycloak-admin
    creationPolicy: Owner
  data:
  - secretKey: admin-username
    remoteRef:
      key: prod/market-intelligence/keycloak
      property: admin_username
  - secretKey: admin-password
    remoteRef:
      key: prod/market-intelligence/keycloak
      property: admin_password
  - secretKey: client-secret
    remoteRef:
      key: prod/market-intelligence/keycloak
      property: client_secret

---
# Kafka SASL Credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: kafka-credentials
  namespace: market-intelligence
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  target:
    name: kafka-credentials
    creationPolicy: Owner
  data:
  - secretKey: username
    remoteRef:
      key: prod/market-intelligence/kafka
      property: username
  - secretKey: password
    remoteRef:
      key: prod/market-intelligence/kafka
      property: password

---
# MinIO/S3 Access Keys
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: minio-credentials
  namespace: market-intelligence
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  target:
    name: minio-credentials
    creationPolicy: Owner
  data:
  - secretKey: access-key
    remoteRef:
      key: prod/market-intelligence/minio
      property: access_key
  - secretKey: secret-key
    remoteRef:
      key: prod/market-intelligence/minio
      property: secret_key

---
# CAISO API Credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: caiso-api-credentials
  namespace: market-intelligence
spec:
  refreshInterval: 6h
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  target:
    name: caiso-api-credentials
    creationPolicy: Owner
  data:
  - secretKey: api-key
    remoteRef:
      key: prod/market-intelligence/caiso
      property: api_key
  - secretKey: api-secret
    remoteRef:
      key: prod/market-intelligence/caiso
      property: api_secret

---
# MISO API Credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: miso-api-credentials
  namespace: market-intelligence
spec:
  refreshInterval: 6h
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  target:
    name: miso-api-credentials
    creationPolicy: Owner
  data:
  - secretKey: api-key
    remoteRef:
      key: prod/market-intelligence/miso
      property: api_key

---
# Service Account for External Secrets
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets-sa
  namespace: market-intelligence
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/ExternalSecretsRole

---
# RBAC for External Secrets Operator
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: external-secrets-role
  namespace: market-intelligence
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: external-secrets-rolebinding
  namespace: market-intelligence
subjects:
- kind: ServiceAccount
  name: external-secrets-sa
  namespace: market-intelligence
roleRef:
  kind: Role
  name: external-secrets-role
  apiGroup: rbac.authorization.k8s.io
