#!/usr/bin/env bash
set -euo pipefail

KAFKA_HOME=${KAFKA_HOME:-/opt/kafka}
CONF_DIR="$KAFKA_HOME/config"
SERVER_PROPERTIES="$CONF_DIR/server.properties"

# Defaults suitable for single-broker KRaft
KAFKA_NODE_ID=${KAFKA_NODE_ID:-0}
KAFKA_PROCESS_ROLES=${KAFKA_PROCESS_ROLES:-broker,controller}
KAFKA_CONTROLLER_LISTENER_NAMES=${KAFKA_CONTROLLER_LISTENER_NAMES:-CONTROLLER}
KAFKA_LISTENERS=${KAFKA_LISTENERS:-PLAINTEXT://:9092,CONTROLLER://:9093}
KAFKA_ADVERTISED_LISTENERS=${KAFKA_ADVERTISED_LISTENERS:-PLAINTEXT://kafka:9092}
KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP:-CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT}
KAFKA_CONTROLLER_QUORUM_VOTERS=${KAFKA_CONTROLLER_QUORUM_VOTERS:-0@localhost:9093}
LOG_DIRS=${LOG_DIRS:-/var/lib/kafka/data}

NUM_PARTITIONS=${KAFKA_NUM_PARTITIONS:-3}
AUTO_CREATE_TOPICS_ENABLE=${KAFKA_AUTO_CREATE_TOPICS_ENABLE:-true}
DEFAULT_REPLICATION_FACTOR=${KAFKA_DEFAULT_REPLICATION_FACTOR:-1}
OFFSETS_TOPIC_REPLICATION_FACTOR=${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR:-1}
TRANSACTION_STATE_LOG_REPLICATION_FACTOR=${KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR:-1}
TRANSACTION_STATE_LOG_MIN_ISR=${KAFKA_TRANSACTION_STATE_LOG_MIN_ISR:-1}

mkdir -p "$LOG_DIRS"

cat > "$SERVER_PROPERTIES" <<EOF
process.roles=${KAFKA_PROCESS_ROLES}
node.id=${KAFKA_NODE_ID}
controller.listener.names=${KAFKA_CONTROLLER_LISTENER_NAMES}
listeners=${KAFKA_LISTENERS}
advertised.listeners=${KAFKA_ADVERTISED_LISTENERS}
listener.security.protocol.map=${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}
controller.quorum.voters=${KAFKA_CONTROLLER_QUORUM_VOTERS}
inter.broker.listener.name=PLAINTEXT

log.dirs=${LOG_DIRS}
num.partitions=${NUM_PARTITIONS}
auto.create.topics.enable=${AUTO_CREATE_TOPICS_ENABLE}
offsets.topic.replication.factor=${OFFSETS_TOPIC_REPLICATION_FACTOR}
transaction.state.log.replication.factor=${TRANSACTION_STATE_LOG_REPLICATION_FACTOR}
transaction.state.log.min.isr=${TRANSACTION_STATE_LOG_MIN_ISR}

group.initial.rebalance.delay.ms=0
EOF

# Initialize storage for KRaft if needed
if [ ! -f "$LOG_DIRS/meta.properties" ]; then
  CLUSTER_ID=$($KAFKA_HOME/bin/kafka-storage.sh random-uuid)
  echo "Formatting storage with cluster id $CLUSTER_ID"
  $KAFKA_HOME/bin/kafka-storage.sh format -t "$CLUSTER_ID" -c "$SERVER_PROPERTIES"
fi

exec "$KAFKA_HOME/bin/kafka-server-start.sh" "$SERVER_PROPERTIES"

