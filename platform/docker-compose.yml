version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: market_intelligence
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data/schemas/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d market_intelligence"]
      interval: 10s
      timeout: 5s
      retries: 5

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./data/schemas/clickhouse/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8123/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    volumes:
      - kafka_data:/bitnami/kafka

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
    ports:
      - "8080:8080"
    command: start-dev
    depends_on:
      - postgres

  gateway:
    build:
      context: ./apps/gateway
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    volumes:
      - ./apps/gateway:/app
      - /app/__pycache__  # Exclude cache for hot reload
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/market_intelligence
      CLICKHOUSE_HOST: clickhouse
      KAFKA_BOOTSTRAP: kafka:9092
      PYTHONPATH: /app
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
      kafka:
        condition: service_healthy
    restart: unless-stopped

  curve-service:
    build:
      context: ./apps/curve-service
      dockerfile: Dockerfile.dev
    ports:
      - "8001:8001"
    volumes:
      - ./apps/curve-service:/app
      - /app/__pycache__
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/market_intelligence
      CLICKHOUSE_HOST: clickhouse
      PYTHONPATH: /app
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
    restart: unless-stopped

  scenario-engine:
    build:
      context: ./apps/scenario-engine
      dockerfile: Dockerfile.dev
    ports:
      - "8002:8002"
    volumes:
      - ./apps/scenario-engine:/app
      - /app/__pycache__
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/market_intelligence
      CLICKHOUSE_HOST: clickhouse
      S3_ENDPOINT: http://minio:9000
      PYTHONPATH: /app
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
      minio:
        condition: service_healthy
    restart: unless-stopped

  report-service:
    build:
      context: ./apps/report-service
      dockerfile: Dockerfile.dev
    ports:
      - "8004:8004"
    volumes:
      - ./apps/report-service:/app
      - /app/__pycache__
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/market_intelligence
      CLICKHOUSE_HOST: clickhouse
      S3_ENDPOINT: http://minio:9000
      PYTHONPATH: /app
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
      minio:
        condition: service_healthy
    restart: unless-stopped

  backtesting-service:
    build:
      context: ./apps/backtesting-service
      dockerfile: Dockerfile.dev
    ports:
      - "8005:8005"
    volumes:
      - ./apps/backtesting-service:/app
      - /app/__pycache__
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/market_intelligence
      CLICKHOUSE_HOST: clickhouse
      PYTHONPATH: /app
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
    restart: unless-stopped

  download-center:
    build:
      context: ./apps/download-center
      dockerfile: Dockerfile.dev
    ports:
      - "8006:8006"
    volumes:
      - ./apps/download-center:/app
      - /app/__pycache__
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/market_intelligence
      S3_ENDPOINT: http://minio:9000
      PYTHONPATH: /app
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    restart: unless-stopped

  web-hub:
    build:
      context: ./apps/web-hub
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./apps/web-hub/src:/app/src
      - ./apps/web-hub/public:/app/public
      - /app/node_modules
    environment:
      VITE_API_URL: http://localhost:8000
      VITE_KEYCLOAK_URL: http://localhost:8080/auth
      VITE_WS_URL: ws://localhost:8000
    depends_on:
      gateway:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  clickhouse_data:
  kafka_data:
  minio_data:

