stages:
  - lint
  - test
  - build
  - scan
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"

# Lint Python code
lint:python:
  stage: lint
  image: python:3.11
  script:
    - pip install black ruff mypy
    - black --check platform/apps platform/data
    - ruff check platform/apps platform/data
    - mypy platform/apps --ignore-missing-imports
  only:
    - merge_requests
    - main

# Lint TypeScript code
lint:typescript:
  stage: lint
  image: node:18
  script:
    - cd platform/apps/web-hub
    - npm install
    - npm run lint
  only:
    - merge_requests
    - main

# Unit tests
test:unit:
  stage: test
  image: python:3.11
  services:
    - postgres:15
    - clickhouse/clickhouse-server:latest
  variables:
    POSTGRES_DB: test_db
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
  script:
    - pip install pytest pytest-cov pytest-asyncio
    - pip install -r platform/apps/gateway/requirements.txt
    - pytest platform/apps/*/tests/ --cov --cov-report=xml
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

# Build Docker images
build:images:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t 254carbon/gateway:$CI_COMMIT_SHA platform/apps/gateway
    - docker build -t 254carbon/curve-service:$CI_COMMIT_SHA platform/apps/curve-service
    - docker build -t 254carbon/scenario-engine:$CI_COMMIT_SHA platform/apps/scenario-engine
    - docker build -t 254carbon/download-center:$CI_COMMIT_SHA platform/apps/download-center
    - docker build -t 254carbon/report-service:$CI_COMMIT_SHA platform/apps/report-service
    - docker push 254carbon/gateway:$CI_COMMIT_SHA
    - docker push 254carbon/curve-service:$CI_COMMIT_SHA
    - docker push 254carbon/scenario-engine:$CI_COMMIT_SHA
    - docker push 254carbon/download-center:$CI_COMMIT_SHA
    - docker push 254carbon/report-service:$CI_COMMIT_SHA
  only:
    - main

# Security scan
scan:security:
  stage: scan
  image: aquasec/trivy:latest
  script:
    - trivy image 254carbon/gateway:$CI_COMMIT_SHA
    - trivy image 254carbon/curve-service:$CI_COMMIT_SHA
  allow_failure: true
  only:
    - main

# Deploy to staging
deploy:staging:
  stage: deploy
  image: alpine/helm:latest
  script:
    - helm upgrade --install market-intelligence ./platform/infra/helm/market-intelligence
      --namespace market-intelligence
      --set image.tag=$CI_COMMIT_SHA
      --set environment=staging
  environment:
    name: staging
    url: https://staging.254carbon.ai
  only:
    - main

# Deploy to production
deploy:production:
  stage: deploy
  image: alpine/helm:latest
  script:
    - helm upgrade --install market-intelligence ./platform/infra/helm/market-intelligence
      --namespace market-intelligence
      --set image.tag=$CI_COMMIT_SHA
      --set environment=production
  environment:
    name: production
    url: https://app.254carbon.ai
  when: manual
  only:
    - main

